/*!
  
  jquery.nInputFile.js
  
  Version: 0.1.0
  Author: Nunifuchisaka(nunifuchisaka@gmail.com)
  Website: http://nunifuchisaka.com/w/n-input-file/demo
  Repository: https://github.com/Nunifuchisaka/nInputFile
  
*/
!function(o,e,t,i){if(e.File&&e.FileReader&&e.FileList&&e.Blob){e.nInputFile={},nInputFile.template={};var l=Backbone.Model.extend({defaults:function(){return{fileData:null,value:null}}});nInputFile.InputImg1_Collection=Backbone.Collection.extend({model:l}),nInputFile.InputImg1=Backbone.View.extend({initialize:function(e){console.log("InputImg1"),_.bindAll(this,"init2","add_model","changeFileData","render","click","remove","loadLocalImage"),this.opts=_.extend({min:2},e),this.$items=this.$(".js_items"),this.$input=this.$("input[type='file']"),this.collection.on("add",this.add_model),this.collection.on("change:fileData",this.changeFileData),this.collection.on("change:result",this.render),this.collection.on("remove",this.init2),this.init2(),this.$input.change(this.loadLocalImage),this.$el.on("click",".is_default",this.click),this.$el.on("click",".js_remove",this.remove)},init2:function(){if(this.opts.min>this.collection.length)for(;this.opts.min>this.collection.length;)this.collection.add({});else this.collection.at(this.collection.length-1).get("result")&&this.collection.add({})},add_model:function(e){var t=e.get("fileData");if(t){var i=new FileReader;i.onload=function(){e.set(i)},i.readAsDataURL(t)}var l=nInputFile.template.input_img_1({cid:e.cid,fileData:null}),n=o(l);e.set({$el:n},{silent:!0}),this.$items.append(n)},changeFileData:function(e){console.group("changeFileData"),console.log(e);var t=e.get("fileData"),i=new FileReader;i.onload=function(){e.set(i)},i.readAsDataURL(t),console.groupEnd()},render:function(e){console.group("render"),console.log("model",e);var t=e.get("$el"),i=e.toJSON(),l=_.extend(i,{cid:e.cid});console.log("args",l),console.log("fileData",l.fileData);var n=nInputFile.template.input_img_1__result(l);t.find(".is_default").remove(),t.prepend(n),this.init2(),console.groupEnd()},click:function(e){return this.$input.click(),!1},remove:function(e){var t=o(e.currentTarget).data("cid"),i=this.collection.get(t);i.get("$el").remove(),this.collection.remove(i)},loadLocalImage:function(e){var i=this;console.log(e.target.files),_.each(e.target.files,function(e){var t=i.collection.findWhere({fileData:null});console.log("emptyModel",t),t?t.set("fileData",e):i.collection.add({fileData:e})})}})}else console.log("File APIに対応していない")}(jQuery,this,this.document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
